//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.6.0.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package vn.com.japfa.esigning_user.signer;

import android.app.Activity;
import android.content.Context;
import android.os.Bundle;
import android.support.v4.app.ActivityCompat;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import org.androidannotations.api.builder.ActivityIntentBuilder;
import org.androidannotations.api.builder.PostActivityStarter;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;
import vn.com.japfa.esigning_user.R;

public final class ActivityDocumentHD_
    extends ActivityDocumentHD
    implements HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public<T extends View> T internalFindViewById(int id) {
        return ((T) this.findViewById(id));
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static ActivityDocumentHD_.IntentBuilder_ intent(Context context) {
        return new ActivityDocumentHD_.IntentBuilder_(context);
    }

    public static ActivityDocumentHD_.IntentBuilder_ intent(android.app.Fragment fragment) {
        return new ActivityDocumentHD_.IntentBuilder_(fragment);
    }

    public static ActivityDocumentHD_.IntentBuilder_ intent(android.support.v4.app.Fragment supportFragment) {
        return new ActivityDocumentHD_.IntentBuilder_(supportFragment);
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.buttonAccept = hasViews.internalFindViewById(R.id.buttonAccept);
        this.buttonReject = hasViews.internalFindViewById(R.id.buttonReject);
        this.buttonFW = hasViews.internalFindViewById(R.id.buttonFW);
        this.buttonPending = hasViews.internalFindViewById(R.id.buttonPending);
        this.textInputLayoutComment = hasViews.internalFindViewById(R.id.textInputLayoutComment);
        this.editTextComment = hasViews.internalFindViewById(R.id.editTextComment);
        this.recycleViewSigned = hasViews.internalFindViewById(R.id.recycleViewSigned);
        View view_buttonPreview = hasViews.internalFindViewById(R.id.buttonPreview);

        if (this.buttonAccept!= null) {
            this.buttonAccept.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ActivityDocumentHD_.this.buttonAccept();
                }
            }
            );
        }
        if (this.buttonPending!= null) {
            this.buttonPending.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ActivityDocumentHD_.this.buttonPending();
                }
            }
            );
        }
        if (this.buttonReject!= null) {
            this.buttonReject.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ActivityDocumentHD_.this.buttonReject();
                }
            }
            );
        }
        if (view_buttonPreview!= null) {
            view_buttonPreview.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ActivityDocumentHD_.this.buttonPreview();
                }
            }
            );
        }
        if (this.buttonFW!= null) {
            this.buttonFW.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    ActivityDocumentHD_.this.buttonFW();
                }
            }
            );
        }
        checkStaticVariables();
        createView();
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        int itemId_ = item.getItemId();
        if (itemId_ == android.R.id.home) {
            home();
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    public static class IntentBuilder_
        extends ActivityIntentBuilder<ActivityDocumentHD_.IntentBuilder_>
    {
        private android.app.Fragment fragment_;
        private android.support.v4.app.Fragment fragmentSupport_;

        public IntentBuilder_(Context context) {
            super(context, ActivityDocumentHD_.class);
        }

        public IntentBuilder_(android.app.Fragment fragment) {
            super(fragment.getActivity(), ActivityDocumentHD_.class);
            fragment_ = fragment;
        }

        public IntentBuilder_(android.support.v4.app.Fragment fragment) {
            super(fragment.getActivity(), ActivityDocumentHD_.class);
            fragmentSupport_ = fragment;
        }

        @Override
        public PostActivityStarter startForResult(int requestCode) {
            if (fragmentSupport_!= null) {
                fragmentSupport_.startActivityForResult(intent, requestCode);
            } else {
                if (fragment_!= null) {
                    fragment_.startActivityForResult(intent, requestCode, lastOptions);
                } else {
                    if (context instanceof Activity) {
                        Activity activity = ((Activity) context);
                        ActivityCompat.startActivityForResult(activity, intent, requestCode, lastOptions);
                    } else {
                        context.startActivity(intent, lastOptions);
                    }
                }
            }
            return new PostActivityStarter(context);
        }
    }
}
